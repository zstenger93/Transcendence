version: "3.8"

# for development

services:
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: docker/frontend/frontend.Dockerfile
    image: transcendence_frontend
    volumes:
      - ${PWD}:/app/
    # ports:
    #   - 4000:4000
    restart: unless-stopped
    command: npm start

  backend:
    container_name: backend
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: docker/backend/backend.Dockerfile
    image: transcendence_backend
    ports:
      - 8000:8000
    volumes:
      - ${PWD}:/app/
    entrypoint: /app/docker/backend/backend.sh
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: postgres
    container_name: database
    environment:
      POSTGRES_DB: transcend_users_db
      POSTGRES_USER: transcend_user
      POSTGRES_PASSWORD: transcend_pwd
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data

  nginx:
    container_name: nginx
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: docker/nginx/nginx.Dockerfile
      args:
        FRONTEND_URL: ${FRONTEND_URL}
        BACKEND_URL: ${BACKEND_URL}
        SERVER: ${SERVER}
        LOCATION: ${LOCATION}
    entrypoint: /app/docker/nginx/nginx.sh
    volumes:
      - ${PWD}:/app/
    image: transcendence_nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  db-data:
