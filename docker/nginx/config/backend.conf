server_tokens               off;
access_log                  /var/log/nginx/backend.access.log;
error_log                   /var/log/nginx/backend.error.log;

server {
  server_name               ${SERVER};
  listen                    80;
  listen 443 ssl;
  ssl_certificate /etc/ssl/localhost.crt;
  ssl_certificate_key /etc/ssl/localhost.key;

  location / {
    proxy_pass              ${FRONTEND_URL};
    proxy_set_header        Host $host;
    proxy_http_version      1.1;
    proxy_set_header        Upgrade $http_upgrade;
    proxy_set_header        Connection 'upgrade';
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_cache_bypass      $http_upgrade;
    proxy_set_header        Origin $http_origin;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
  }

  location /api/ {
    proxy_pass              ${BACKEND_URL};
    proxy_set_header        Host $host;
    proxy_http_version      1.1;
    proxy_set_header        Connection "upgrade";
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_set_header        Origin $http_origin;
    proxy_cache_bypass      $http_upgrade;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
  }

  location ~ ^/static/js/main\.[a-f0-9]+\.js$ {
  autoindex on;
  alias /app/frontend/build/static/js/;
}
}